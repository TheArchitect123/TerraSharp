// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: my.proto
// </auto-generated>

#region Designer generated code
#pragma warning disable CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace Ics23
{

    [global::ProtoBuf.ProtoContract()]
    public partial class ExistenceProof : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"key")]
        public byte[] Key { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"value")]
        public byte[] Value { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"leaf")]
        public LeafOp Leaf { get; set; }

        [global::ProtoBuf.ProtoMember(4, Name = @"path")]
        public global::System.Collections.Generic.List<InnerOp> Paths { get; } = new global::System.Collections.Generic.List<InnerOp>();

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class NonExistenceProof : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"key")]
        public byte[] Key { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"left")]
        public ExistenceProof Left { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"right")]
        public ExistenceProof Right { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CommitmentProof : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"exist")]
        public ExistenceProof Exist
        {
            get => __pbn__proof.Is(1) ? ((ExistenceProof)__pbn__proof.Object) : default;
            set => __pbn__proof = new global::ProtoBuf.DiscriminatedUnionObject(1, value);
        }
        public bool ShouldSerializeExist() => __pbn__proof.Is(1);
        public void ResetExist() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__proof, 1);

        private global::ProtoBuf.DiscriminatedUnionObject __pbn__proof;

        [global::ProtoBuf.ProtoMember(2, Name = @"nonexist")]
        public NonExistenceProof Nonexist
        {
            get => __pbn__proof.Is(2) ? ((NonExistenceProof)__pbn__proof.Object) : default;
            set => __pbn__proof = new global::ProtoBuf.DiscriminatedUnionObject(2, value);
        }
        public bool ShouldSerializeNonexist() => __pbn__proof.Is(2);
        public void ResetNonexist() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__proof, 2);

        [global::ProtoBuf.ProtoMember(3, Name = @"batch")]
        public BatchProof Batch
        {
            get => __pbn__proof.Is(3) ? ((BatchProof)__pbn__proof.Object) : default;
            set => __pbn__proof = new global::ProtoBuf.DiscriminatedUnionObject(3, value);
        }
        public bool ShouldSerializeBatch() => __pbn__proof.Is(3);
        public void ResetBatch() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__proof, 3);

        [global::ProtoBuf.ProtoMember(4, Name = @"compressed")]
        public CompressedBatchProof Compressed
        {
            get => __pbn__proof.Is(4) ? ((CompressedBatchProof)__pbn__proof.Object) : default;
            set => __pbn__proof = new global::ProtoBuf.DiscriminatedUnionObject(4, value);
        }
        public bool ShouldSerializeCompressed() => __pbn__proof.Is(4);
        public void ResetCompressed() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__proof, 4);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class LeafOp : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"hash")]
        public HashOp Hash { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"prehash_key")]
        public HashOp PrehashKey { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"prehash_value")]
        public HashOp PrehashValue { get; set; }

        [global::ProtoBuf.ProtoMember(4, Name = @"length")]
        public LengthOp Length { get; set; }

        [global::ProtoBuf.ProtoMember(5, Name = @"prefix")]
        public byte[] Prefix { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class InnerOp : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"hash")]
        public HashOp Hash { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"prefix")]
        public byte[] Prefix { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"suffix")]
        public byte[] Suffix { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class ProofSpec : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"leaf_spec")]
        public LeafOp LeafSpec { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"inner_spec")]
        public InnerSpec InnerSpec { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"max_depth")]
        public int MaxDepth { get; set; }

        [global::ProtoBuf.ProtoMember(4, Name = @"min_depth")]
        public int MinDepth { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class InnerSpec : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"child_order", IsPacked = true)]
        public int[] ChildOrders { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"child_size")]
        public int ChildSize { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"min_prefix_length")]
        public int MinPrefixLength { get; set; }

        [global::ProtoBuf.ProtoMember(4, Name = @"max_prefix_length")]
        public int MaxPrefixLength { get; set; }

        [global::ProtoBuf.ProtoMember(5, Name = @"empty_child")]
        public byte[] EmptyChild { get; set; }

        [global::ProtoBuf.ProtoMember(6, Name = @"hash")]
        public HashOp Hash { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class BatchProof : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"entries")]
        public global::System.Collections.Generic.List<BatchEntry> Entries { get; } = new global::System.Collections.Generic.List<BatchEntry>();

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class BatchEntry : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"exist")]
        public ExistenceProof Exist
        {
            get => __pbn__proof.Is(1) ? ((ExistenceProof)__pbn__proof.Object) : default;
            set => __pbn__proof = new global::ProtoBuf.DiscriminatedUnionObject(1, value);
        }
        public bool ShouldSerializeExist() => __pbn__proof.Is(1);
        public void ResetExist() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__proof, 1);

        private global::ProtoBuf.DiscriminatedUnionObject __pbn__proof;

        [global::ProtoBuf.ProtoMember(2, Name = @"nonexist")]
        public NonExistenceProof Nonexist
        {
            get => __pbn__proof.Is(2) ? ((NonExistenceProof)__pbn__proof.Object) : default;
            set => __pbn__proof = new global::ProtoBuf.DiscriminatedUnionObject(2, value);
        }
        public bool ShouldSerializeNonexist() => __pbn__proof.Is(2);
        public void ResetNonexist() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__proof, 2);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CompressedBatchProof : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"entries")]
        public global::System.Collections.Generic.List<CompressedBatchEntry> Entries { get; } = new global::System.Collections.Generic.List<CompressedBatchEntry>();

        [global::ProtoBuf.ProtoMember(2, Name = @"lookup_inners")]
        public global::System.Collections.Generic.List<InnerOp> LookupInners { get; } = new global::System.Collections.Generic.List<InnerOp>();

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CompressedBatchEntry : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"exist")]
        public CompressedExistenceProof Exist
        {
            get => __pbn__proof.Is(1) ? ((CompressedExistenceProof)__pbn__proof.Object) : default;
            set => __pbn__proof = new global::ProtoBuf.DiscriminatedUnionObject(1, value);
        }
        public bool ShouldSerializeExist() => __pbn__proof.Is(1);
        public void ResetExist() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__proof, 1);

        private global::ProtoBuf.DiscriminatedUnionObject __pbn__proof;

        [global::ProtoBuf.ProtoMember(2, Name = @"nonexist")]
        public CompressedNonExistenceProof Nonexist
        {
            get => __pbn__proof.Is(2) ? ((CompressedNonExistenceProof)__pbn__proof.Object) : default;
            set => __pbn__proof = new global::ProtoBuf.DiscriminatedUnionObject(2, value);
        }
        public bool ShouldSerializeNonexist() => __pbn__proof.Is(2);
        public void ResetNonexist() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__proof, 2);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CompressedExistenceProof : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"key")]
        public byte[] Key { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"value")]
        public byte[] Value { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"leaf")]
        public LeafOp Leaf { get; set; }

        [global::ProtoBuf.ProtoMember(4, Name = @"path", IsPacked = true)]
        public int[] Paths { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CompressedNonExistenceProof : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"key")]
        public byte[] Key { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"left")]
        public CompressedExistenceProof Left { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"right")]
        public CompressedExistenceProof Right { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public enum HashOp
    {
        [global::ProtoBuf.ProtoEnum(Name = @"NO_HASH")]
        NoHash = 0,
        [global::ProtoBuf.ProtoEnum(Name = @"SHA256")]
        Sha256 = 1,
        [global::ProtoBuf.ProtoEnum(Name = @"SHA512")]
        Sha512 = 2,
        [global::ProtoBuf.ProtoEnum(Name = @"KECCAK")]
        Keccak = 3,
        [global::ProtoBuf.ProtoEnum(Name = @"RIPEMD160")]
        Ripemd160 = 4,
        [global::ProtoBuf.ProtoEnum(Name = @"BITCOIN")]
        Bitcoin = 5,
    }

    [global::ProtoBuf.ProtoContract()]
    public enum LengthOp
    {
        [global::ProtoBuf.ProtoEnum(Name = @"NO_PREFIX")]
        NoPrefix = 0,
        [global::ProtoBuf.ProtoEnum(Name = @"VAR_PROTO")]
        VarProto = 1,
        [global::ProtoBuf.ProtoEnum(Name = @"VAR_RLP")]
        VarRlp = 2,
        [global::ProtoBuf.ProtoEnum(Name = @"FIXED32_BIG")]
        Fixed32Big = 3,
        [global::ProtoBuf.ProtoEnum(Name = @"FIXED32_LITTLE")]
        Fixed32Little = 4,
        [global::ProtoBuf.ProtoEnum(Name = @"FIXED64_BIG")]
        Fixed64Big = 5,
        [global::ProtoBuf.ProtoEnum(Name = @"FIXED64_LITTLE")]
        Fixed64Little = 6,
        [global::ProtoBuf.ProtoEnum(Name = @"REQUIRE_32_BYTES")]
        Require32Bytes = 7,
        [global::ProtoBuf.ProtoEnum(Name = @"REQUIRE_64_BYTES")]
        Require64Bytes = 8,
    }

}

#pragma warning restore CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
#endregion
